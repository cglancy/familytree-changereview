//
// Variables
// --------------------------------------------------


// Global values
// --------------------------------------------------


// Media queries
// -------------------------
@retina: ~'only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5), only screen and (min-resolution: 240dpi)';


// Animation
// -------------------------
@duration:        250ms;
@morphDuration:   250ms;
@easing:          cubic-bezier(0.645, 0.045, 0.355, 1.000);


// Greys
// -------------------------
@black:                 #000;
@grayDarker:            #222;
@grayDark:              #333;
@gray:                  #555;
@grayLight:             #999;
@grayLighter:           #eee;
@white:                 #fff;


// Accent colors
// -------------------------
@blue:                  #049cdb;
@blueDark:              #0064cd;
@green:                 #46a546;
@red:                   #9d261d;
@yellow:                #ffc40d;
@orange:                #f89406;
@pink:                  #c3325f;
@purple:                #7a43b6;


// Custom colors
// -------------------------
@hintColor:            #00c04a;
@maleColor:            #20a6d9;
@femaleColor:          #ed1c79;
@diagramLineColor:     #888;


// Scaffolding
// -------------------------
@bodyBackground:        @white;
@textColor:             @grayDark;


// Links
// -------------------------
@linkColor:            #00a7dc;
@linkColorHover:       darken(@linkColor, 15%);


// Typography
// -------------------------
@sansFontFamily:        "Helvetica Neue", Helvetica, Arial, sans-serif;
@serifFontFamily:       Georgia, "Times New Roman", Times, serif;
@monoFontFamily:        Monaco, Menlo, Consolas, "Courier New", monospace;

@baseFontSize:          14px;
@baseFontFamily:        @sansFontFamily;
@baseLineHeight:        20px;
@altFontFamily:         @serifFontFamily;

@headingsFontFamily:    inherit; // empty to use BS default, @baseFontFamily
@headingsFontWeight:    normal;    // instead of browser default, bold
@headingsColor:         inherit; // empty to use BS default, @textColor


// Component sizing
// -------------------------
// Based on 14px font-size and 20px line-height

@fontSizeLarge:         @baseFontSize * 1.25; // ~18px
@fontSizeSmall:         @baseFontSize * 0.85; // ~12px
@fontSizeMini:          @baseFontSize * 0.75; // ~11px

@paddingLarge:          11px 19px; // 44px
@paddingSmall:          2px 10px;  // 26px
@paddingMini:           0 6px;   // 22px

@baseBorderRadius:      1px;
@borderRadiusLarge:     2px;
@borderRadiusSmall:     3px;


// Tables
// -------------------------
@tableBackground:                   transparent; // overall background-color
@tableBackgroundAccent:             #f9f9f9; // for striping
@tableBackgroundHover:              #f5f5f5; // for hover
@tableBorder:                       #ddd; // table and cell border

// Buttons
// -------------------------
@btnBackground:                     @white;
@btnBackgroundHighlight:            darken(@white, 5%);
@btnBorder:                         darken(@grayLighter, 20%);

@btnPrimaryBackground:              @linkColor;
@btnPrimaryBackgroundHighlight:     darken(@linkColor, 5%);

@btnInfoBackground:                 #5bc0de;
@btnInfoBackgroundHighlight:        #2f96b4;

@btnSuccessBackground:              #62c462;
@btnSuccessBackgroundHighlight:     #51a351;

@btnWarningBackground:              lighten(@orange, 15%);
@btnWarningBackgroundHighlight:     @orange;

@btnDangerBackground:               #ee5f5b;
@btnDangerBackgroundHighlight:      #bd362f;

@btnInverseBackground:              #444;
@btnInverseBackgroundHighlight:     @grayDarker;


// Forms
// -------------------------
@inputBackground:               @white;
@inputBorder:                   @grayLight;
@inputBorderRadius:             @baseBorderRadius;
@inputDisabledBackground:       @grayLighter;
@formActionsBackground:         #f5f5f5;
@inputHeight:                   @baseLineHeight + 10px; // base line-height + 8px vertical padding + 2px top/bottom border


// Dropdowns
// -------------------------
@dropdownBackground:            @white;
@dropdownBorder:                rgba(0, 0, 0, 0.2);
@dropdownDividerTop:            #ccc;
@dropdownDividerBottom:         @white;

@dropdownLinkColor:             @textColor;
@dropdownLinkColorHover:        @dropdownLinkColor;
@dropdownLinkColorActive:       @linkColor;

@dropdownLinkBackgroundActive:  #f5f5f5;
@dropdownLinkBackgroundHover:   rgba(0,0,0,0);



// COMPONENT VARIABLES
// --------------------------------------------------


// Z-index master list
// -------------------------
// Used for a bird's eye view of components dependent on the z-axis
// Try to avoid customizing these :)
@zindexDropdown:          1000;
@zindexPopover:           1010;
@zindexTooltip:           1030;
@zindexFixedNavbar:       1030;
@zindexModalBackdrop:     1040;
@zindexModal:             1050;


// Sprite icons path
// -------------------------
@iconSpritePath:          "../img/glyphicons-halflings.png";
@iconWhiteSpritePath:     "../img/glyphicons-halflings-white.png";


// Input placeholder text color
// -------------------------
@placeholderText:         @grayLight;


// Hr border color
// -------------------------
@hrBorder:                @grayLighter;


// Horizontal forms & lists
// -------------------------
@horizontalComponentOffset:       180px;
@horizontalComponentOffsetModal:  115px;


// Wells
// -------------------------
@wellBackground:                  #f5f5f5;


// Navbar
// -------------------------
@navbarCollapseWidth:             979px;
@navbarCollapseDesktopWidth:      @navbarCollapseWidth + 1;

@navbarHeight:                    40px;
@navbarBackgroundHighlight:       #ffffff;
@navbarBackground:                darken(@navbarBackgroundHighlight, 5%);
@navbarBorder:                    darken(@navbarBackground, 12%);

@navbarText:                      #777;
@navbarLinkColor:                 #777;
@navbarLinkColorHover:            @grayDark;
@navbarLinkColorActive:           @gray;
@navbarLinkBackgroundHover:       transparent;
@navbarLinkBackgroundActive:      darken(@navbarBackground, 5%);

@navbarBrandColor:                @navbarLinkColor;

// Inverted navbar
@navbarInverseBackground:                #111111;
@navbarInverseBackgroundHighlight:       #222222;
@navbarInverseBorder:                    #252525;

@navbarInverseText:                      @grayLight;
@navbarInverseLinkColor:                 @grayLight;
@navbarInverseLinkColorHover:            @white;
@navbarInverseLinkColorActive:           @navbarInverseLinkColorHover;
@navbarInverseLinkBackgroundHover:       transparent;
@navbarInverseLinkBackgroundActive:      @navbarInverseBackground;

@navbarInverseSearchBackground:          lighten(@navbarInverseBackground, 25%);
@navbarInverseSearchBackgroundFocus:     @white;
@navbarInverseSearchBorder:              @navbarInverseBackground;
@navbarInverseSearchPlaceholderColor:    #ccc;

@navbarInverseBrandColor:                @navbarInverseLinkColor;


// Pagination
// -------------------------
@paginationBackground:                #fff;
@paginationBorder:                    #d7d7d7;
@paginationActiveBackground:          @bodyBackground;


// Hero unit
// -------------------------
@heroUnitBackground:              @grayLighter;
@heroUnitHeadingColor:            inherit;
@heroUnitLeadColor:               inherit;


// Form states and alerts
// -------------------------
@warningText:             #c09853;
@warningBackground:       #fcf8e3;
@warningBorder:           darken(spin(@warningBackground, -10), 3%);

@errorText:               #b94a48;
@errorBackground:         #f2dede;
@errorBorder:             #ee5f5b;

@successText:             #00c04a;
@successBackground:       #dff0d8;
@successBorder:           @successText;

@infoText:                #3a87ad;
@infoBackground:          #d9edf7;
@infoBorder:              darken(spin(@infoBackground, -10), 7%);




// GRID
// --------------------------------------------------


// Default 940px grid
// -------------------------
@gridColumns:             12;
@gridColumnWidth:         60px;
@gridGutterWidth:         20px;
@gridRowWidth:            (@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));

// 1200px min
@gridColumnWidth1200:     70px;
@gridGutterWidth1200:     30px;
@gridRowWidth1200:        (@gridColumns * @gridColumnWidth1200) + (@gridGutterWidth1200 * (@gridColumns - 1));

// 768px-979px
@gridColumnWidth768:      42px;
@gridGutterWidth768:      20px;
@gridRowWidth768:         (@gridColumns * @gridColumnWidth768) + (@gridGutterWidth768 * (@gridColumns - 1));


// Fluid grid
// -------------------------
@fluidGridColumnWidth:    percentage(@gridColumnWidth/@gridRowWidth);
@fluidGridGutterWidth:    percentage(@gridGutterWidth/@gridRowWidth);

// 1200px min
@fluidGridColumnWidth1200:     percentage(@gridColumnWidth1200/@gridRowWidth1200);
@fluidGridGutterWidth1200:     percentage(@gridGutterWidth1200/@gridRowWidth1200);

// 768px-979px
@fluidGridColumnWidth768:      percentage(@gridColumnWidth768/@gridRowWidth768);
@fluidGridGutterWidth768:      percentage(@gridGutterWidth768/@gridRowWidth768);


//
// Mixins
// --------------------------------------------------


// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
.clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
    // Fixes Opera/contenteditable bug:
    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

// Webkit-style focus
// ------------------
.tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 1px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Center-align a block level element
// ----------------------------------
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Sizing shortcuts
// -------------------------
.size(@height, @width) {
  width: @width;
  height: @height;
}
.square(@size) {
  .size(@size, @size);
}

// Placeholder text
// -------------------------
.placeholder(@color: @placeholderText) {
  &:-moz-placeholder {
    color: @color;
  }
  &:-ms-input-placeholder {
    color: @color;
  }
  &::-webkit-input-placeholder {
    color: @color;
  }
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
.hide-text {
  font: 0/0 a;
  color: transparent;
  background-color: transparent;
  border: 0;
}


// FONTS
// --------------------------------------------------

#font {
  #family {
    .serif() {
      font-family: @serifFontFamily;
    }
    .sans-serif() {
      font-family: @sansFontFamily;
    }
    .monospace() {
      font-family: @monoFontFamily;
    }
  }
  .shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
  }
  .serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .sans-serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .sans-serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .monospace(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .monospace;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
}


// FORMS
// --------------------------------------------------

// Block level inputs
.input-block-level {
  display: block;
  width: 100%;
  min-height: @inputHeight; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  .box-sizing(border-box); // Makes inputs behave like true block-level elements
}



// Mixin for form field states
.formFieldState(@textColor: #555, @borderColor: #ccc, @backgroundColor: #f5f5f5) {
  // Set the text color
  .control-label,
  .help-block,
  .help-inline {
    color: @textColor;
  }
  // Style inputs accordingly
  .checkbox,
  .radio,
  input,
  select,
  textarea {
    color: @textColor;
  }
  input,
  select,
  textarea {
    border-color: @borderColor;
    .box-shadow(inset 0 0 0 1px rgba(0, 0, 0, 0.125)); // Redeclare so transitions work
    &:focus {
      border-color: darken(@borderColor, 10%);
      @shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.125), 0 0 0 1px lighten(@borderColor, 20%);
      .box-shadow(@shadow);
    }
  }
  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on {
    color: @textColor;
    background-color: @backgroundColor;
    border-color: @textColor;
  }
}



// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
.border-radius(@radius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

// Single Corner Border Radius
.border-top-left-radius(@radius) {
  -webkit-border-top-left-radius: @radius;
      -moz-border-radius-topleft: @radius;
          border-top-left-radius: @radius;
}
.border-top-right-radius(@radius) {
  -webkit-border-top-right-radius: @radius;
      -moz-border-radius-topright: @radius;
          border-top-right-radius: @radius;
}
.border-bottom-right-radius(@radius) {
  -webkit-border-bottom-right-radius: @radius;
      -moz-border-radius-bottomright: @radius;
          border-bottom-right-radius: @radius;
}
.border-bottom-left-radius(@radius) {
  -webkit-border-bottom-left-radius: @radius;
      -moz-border-radius-bottomleft: @radius;
          border-bottom-left-radius: @radius;
}

// Single Side Border Radius
.border-top-radius(@radius) {
  .border-top-right-radius(@radius);
  .border-top-left-radius(@radius);
}
.border-right-radius(@radius) {
  .border-top-right-radius(@radius);
  .border-bottom-right-radius(@radius);
}
.border-bottom-radius(@radius) {
  .border-bottom-right-radius(@radius);
  .border-bottom-left-radius(@radius);
}
.border-left-radius(@radius) {
  .border-top-left-radius(@radius);
  .border-bottom-left-radius(@radius);
}

// Drop shadows
.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
          box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}
.transition-delay(@transition-delay) {
  -webkit-transition-delay: @transition-delay;
     -moz-transition-delay: @transition-delay;
       -o-transition-delay: @transition-delay;
          transition-delay: @transition-delay;
}
.transition-duration(@transition-duration) {
  -webkit-transition-duration: @transition-duration;
     -moz-transition-duration: @transition-duration;
       -o-transition-duration: @transition-duration;
          transition-duration: @transition-duration;
}

// Transformations
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}
.translate(@x, @y) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}
.skew(@x, @y) {
  -webkit-transform: skew(@x, @y);
     -moz-transform: skew(@x, @y);
      -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twitter/bootstrap/issues/4885
       -o-transform: skew(@x, @y);
          transform: skew(@x, @y);
  -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}
.translate3d(@x, @y, @z) {
  -webkit-transform: translate3d(@x, @y, @z);
     -moz-transform: translate3d(@x, @y, @z);
       -o-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
.backface-visibility(@visibility){
  -webkit-backface-visibility: @visibility;
     -moz-backface-visibility: @visibility;
          backface-visibility: @visibility;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
.background-clip(@clip) {
  -webkit-background-clip: @clip;
     -moz-background-clip: @clip;
          background-clip: @clip;
}

// Background sizing
.background-size(@size) {
  -webkit-background-size: @size;
     -moz-background-size: @size;
       -o-background-size: @size;
          background-size: @size;
}


// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
     -moz-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

// User select
// For selecting text on the page
.user-select(@select) {
  -webkit-user-select: @select;
     -moz-user-select: @select;
      -ms-user-select: @select;
       -o-user-select: @select;
          user-select: @select;
}

// Resize anything
.resizable(@direction) {
  resize: @direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// CSS3 Content Columns
.content-columns(@columnCount, @columnGap: @gridGutterWidth) {
  -webkit-column-count: @columnCount;
     -moz-column-count: @columnCount;
          column-count: @columnCount;
  -webkit-column-gap: @columnGap;
     -moz-column-gap: @columnGap;
          column-gap: @columnGap;
}

// Optional hyphenation
.hyphens(@mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: @mode;
     -moz-hyphens: @mode;
      -ms-hyphens: @mode;
       -o-hyphens: @mode;
          hyphens: @mode;
}

// Opacity
.opacity(@opacity) {
  opacity: @opacity / 100;
  filter: ~"alpha(opacity=@{opacity})";
}



// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
  .background(@color: @white, @alpha: 1) {
    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
  }
  .border(@color: @white, @alpha: 1) {
    border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    .background-clip(padding-box);
  }
}

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  color: @textColor;
  #gradient > .vertical(@primaryColor, @secondaryColor);
  border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

// Gradients
#gradient {
  .horizontal(@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to right, @startColor, @endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@startColor),argb(@endColor))); // IE9 and down
  }
  .vertical(@startColor: #555, @endColor: #333) {
    background-color: mix(@startColor, @endColor, 60%);
    background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, @startColor, @endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down
  }
  .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(@deg, @startColor, @endColor); // Standard, IE10
  }
  .horizontal-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: mix(@midColor, @endColor, 80%);
    background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(to right, @startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down, gets no color-stop at all for proper fallback
  }

  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: mix(@midColor, @endColor, 80%);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down, gets no color-stop at all for proper fallback
  }
  .radial(@innerColor: #555, @outerColor: #333) {
    background-color: @outerColor;
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
    background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);
    background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);
    background-image: -o-radial-gradient(circle, @innerColor, @outerColor);
    background-repeat: no-repeat;
  }
  .striped(@color: #555, @angle: 45deg) {
    background-color: @color;
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  }
}
// Reset filters for IE
.reset-filter() {
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}



// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
.nav-divider(@top: #e5e5e5, @bottom: @white) {
  height: 1px;
  margin: ((@baseLineHeight / 2) - 1) 1px; // 8px 1px
  overflow: hidden;
  background-color: @top;
  border-bottom: 1px solid @bottom;
}

// Button backgrounds
// ------------------
.buttonBackground(@startColor, @endColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  .gradientBar(@startColor, @endColor, @textColor, @textShadow);
  .reset-filter();

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:focus, &:active, &.active, &.disabled, &[disabled] {
    color: @textColor;
    background-color: @endColor;
  }

  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
  &:active,
  &.active {
    background-color: darken(@endColor, 10%) e("\9");
  }
}

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbarVerticalAlign(30px);` to calculate the appropriate top margin.
.navbarVerticalAlign(@elementHeight) {
  margin-top: (@navbarHeight - @elementHeight) / 2;
}



// Grid System
// -----------

// Centered container element
.container-fixed() {
  margin-right: auto;
  margin-left: auto;
  .clearfix();
}

// Table columns
.tableColumns(@columnSpan: 1) {
  float: none; // undo default grid column styles
  width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) - 16; // 16 is total padding on left and right of table cells
  margin-left: 0; // undo default grid column styles
}

// Make a Grid
// Use .makeRow and .makeColumn to assign semantic layouts grid system behavior
.makeRow() {
  margin-left: @gridGutterWidth * -1;
  .clearfix();
}
.makeColumn(@columns: 1, @offset: 0) {
  float: left;
  margin-left: (@gridColumnWidth * @offset) + (@gridGutterWidth * (@offset - 1)) + (@gridGutterWidth * 2);
  width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
}

// The Grid
#grid {

  .core (@gridColumnWidth, @gridGutterWidth) {

    .spanX (@index) when (@index > 0) {
      .span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .offsetX (@index) when (@index > 0) {
      .offset@{index} { .offset(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}

    .offset (@columns) {
      margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns + 1));
    }

    .span (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
    }

    .row {
      margin-left: @gridGutterWidth * -1;
      .clearfix();
    }

    [class*="span"] {
      float: left;
      min-height: 1px; // prevent collapsing columns
      margin-left: @gridGutterWidth;
    }

    // Set the container width, and override it for fixed navbars in media queries
    .container,
    .navbar-static-top .container,
    .navbar-fixed-top .container,
    .navbar-fixed-bottom .container { .span(@gridColumns); }

    // generate .spanX and .offsetX
    .spanX (@gridColumns);
    .offsetX (@gridColumns);

  }

  .fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) {

    .spanX (@index) when (@index > 0) {
      .span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .offsetX (@index) when (@index > 0) {
      .offset@{index} { .offset(@index); }
      .offset@{index}:first-child { .offsetFirstChild(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}

    .offset (@columns) {
      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth*2);
    }

    .offsetFirstChild (@columns) {
      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth);
    }

    .span (@columns) {
      width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
    }

    .row-fluid {
      width: 100%;
      .clearfix();
      [class*="span"] {
        .input-block-level();
        float: left;
        margin-left: @fluidGridGutterWidth;
      }
      [class*="span"]:first-child {
        margin-left: 0;
      }

      // Space grid-sized controls properly if multiple per line
      .controls-row [class*="span"] + [class*="span"] {
        margin-left: @fluidGridGutterWidth;
      }

      // generate .spanX and .offsetX
      .spanX (@gridColumns);
      .offsetX (@gridColumns);
    }

  }

  .input(@gridColumnWidth, @gridGutterWidth) {

    .spanX (@index) when (@index > 0) {
      input.span@{index}, textarea.span@{index}, .uneditable-input.span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .span(@columns) {
      width: ((@gridColumnWidth) * @columns) + (@gridGutterWidth * (@columns - 1)) - 14;
    }

    input,
    textarea,
    .uneditable-input {
      margin-left: 0; // override margin-left from core grid system
    }

    // Space grid-sized controls properly if multiple per line
    .controls-row [class*="span"] + [class*="span"] {
      margin-left: @gridGutterWidth;
    }

    // generate .spanX
    .spanX (@gridColumns);

  }
}






/* ==========================================================================
   Pedigree
   ========================================================================== */

.node {
  .clearfix();
  .box-sizing(border-box);
  .transition(~'border-color '@duration @easing~', box-shadow '@duration @easing);
  position: relative;
  display: block;
  margin: 0 0 15px;
  width: 100%;
  border: 1px solid @grayLight;
  background: @white;
  color: @textColor;
  text-align: left;
  font-size: 11px;
  line-height: 1;
}

.node__image,
.node__loading {
  margin: 4px 4px 0;
}

.node__loading {
  position: absolute;
  top: 0;
  left: 0;
  width: 70px;
  height: 70px;
  background: @white;
  background: rgba(255, 255, 255, 0.8);
  content: '';
  text-align: center;
  font-size: 40px;
  line-height: 1.5;
}

.node__body {
  .clearfix;
  margin: 0 4px 4px;
}

.node__name {
  .transition(color @duration @easing);
  overflow: hidden;
  margin: 2px 0 0;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 1em;
  line-height: 1.181818182;
}

.node__dates {
  overflow: hidden;
  max-height: 1.25em;
  color: @grayLight;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 1em;
  line-height: 1.181818182;
}

.node__dates-large {
  float: right;
  margin: 27px 15px 0;
  color: @grayLight;
  font-size: 32px;
  line-height: 1;
}

.node__relationship {
  color: @gray;
}

.node__info {
  color: @grayLight;
}

.node__number,
.node__letter {
  position: absolute;
  top: 5px;
  text-align: center;
  line-height: 1.5;
}

.node__number {
  left: 5px;
  width: 1.5em;
  height: 1.5em;
  background: @white;
}

.node__letter {
  .transition(@duration @easing);
  right: 5px;
  width: 1.4em;
  background: darken(@grayLighter, 15%);
  color: @white;
}

.node__more {
  .transition(~'color '@duration @easing~', border-color '@duration @easing);
  position: absolute;
  right: -10px;
  bottom: 15px;
  padding: 2px;
  border: 1px solid @grayLight;
  background: @grayLighter;
  text-align: center;
  font-weight: normal;
  font-size: 12px;
  line-height: 15px;
}

/* new */

.node input[type='checkbox'],
.node input[type='radio'] {
  position: absolute;
  z-index: -1;
}

.node__check {
  float: right;
  margin: 5px;
}

label.node {
  background: @white;
}

label.node .node__name {
  color: @grayLight;
}

label.node .node__image {
  opacity: 0.2;
}

.node.node--checked .node__name {
  color: @textColor;
}

.node.node--checked .node__image {
  opacity: 1;
}

.node.node--checked .node__check,
.node.node--checked .icon-circle {
  color: @green;
}

/* */

.no-touch a.node:hover,
.no-touch label.node:hover,
a.node:focus {
  .transition(none);
  outline: 0;
  border-color: @linkColor;
}

a.node:active,
label.node:active {
  .transition(none);
  border-color: @linkColor;
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.125);
}

.node__more:hover {
  .transition(none);
  border-color: @linkColor;
  color: @linkColor;
}

.no-touch a.node:hover .node__name,
a.node:focus .node__name,
a.node:active .node__name {
  .transition(none);
  border-color: @linkColor;
  color: @linkColor;
}

/* pedigree */

.node--pedigree {
  font-size: 12px;
  text-decoration: none;
}

.node--pedigree .node__image {
  float: left;
  margin: 4px;
  width: 30px;
  height: 30px;
  padding-left: 6px;
  font-size: 17px;
  line-height: 30px;
}

.node--pedigree .node__loading {
  width: 30px;
  height: 30px;
  font-size: 20px;
}

.node--pedigree .node__body {
  margin: 4px 4px 0 0;
}

/* group-sheet */

.node--group-sheet {
  background: @white;
  font-size: 12px;
}

.node--group-sheet .node__image {
  float: left;
  margin: 9px;
  width: 45px;
  height: 45px;
}

.node--group-sheet .node__loading {
  margin: 9px;
  width: 45px;
  height: 45px;
  font-size: 30px;
}

.node--group-sheet .node__body {
  margin: 9px 9px 0 0;
  min-height: 54px;
}

.node--group-sheet .node__name {
  font-size: 16px;
}

.node--group-sheet.node--empty {
  min-height: 65px;
  border-color: lighten(@diagramLineColor, 20%);
}

/* table */

.node--relation {
  margin: 0;
  border-color: darken(@grayLighter, 15%);
  font-size: 12px;
}

.node--relation.node--add {
  background: @white;
  border-color: darken(@grayLighter, 15%);
}

.node--relation .node__image {
  float: left;
  margin: 9px;
  width: 70px;
  height: 70px;
  @media (max-width: 479px) {
    width: 45px;
    height: 45px;
  }
}

.node--relation .node__loading {
  margin: 9px;
  width: 70px;
  height: 70px;
  font-size: 46.666666667px;
  @media (max-width: 479px) {
    width: 45px;
    height: 45px;
    font-size: 30px;
  }
}

.node--relation .node__body {
  margin: 9px 9px 0 0;
}

.node--relation .node__name {
  font-size: 16px;
}

.node--relation .node__info {
  line-height: 1.25;
}


.node--relation .node__number {
  top: 10px;
  left: 10px;
}

.node--relation.node--empty {
  min-height: 90px;
}

/* table */

.node--table {
  margin: 0;
  border-color: transparent;
  background: none;
  font-size: 12px;
}

/* !important wtf */
.no-touch a.node--table:hover,
a.node--table:focus {
  border-color: transparent !important;
  background: none;
}

.node--table .node__image {
  float: left;
  margin: 9px;
  width: 70px;
  height: 70px;
  @media (max-width: 479px) {
    width: 45px;
    height: 45px;
  }
}

.node--table .node__loading {
  margin: 9px;
  width: 70px;
  height: 70px;
  font-size: 46.666666667px;
  @media (max-width: 479px) {
    width: 45px;
    height: 45px;
    font-size: 30px;
  }
}

.node--table .node__body {
  margin: 9px 9px 0 0;
}

.node--table .node__name {
  font-size: 16px;
}

.node--table .node__info {
  line-height: 1.25;
}

.node--table .node__number {
  top: 10px;
  left: 10px;
}

/* header */

.node--header {
  float: left;
  margin: 1px 0 0;
  width: 60%;
  border: 0;
  background: none;
  @media (max-width: 767px) {
    width: 100%;
  }
}

.node--header .node__image {
  float: left;
  margin: 3px 10px 0 0;
  width: 45px;
  height: 45px;
  @media (max-width: 479px) {
    float: none;
  }
}

.node--header .node__body {
  margin: 0;
}

.node--header .node__name {
  float: none;
  margin: 0;
  color: @grayLight;
  font-size: 31.5px;
  @media (max-width: 479px) {
    overflow: visible;
    white-space: normal;
  }
}

.node--header .node__info {
  font-size: 14px;
}

/* profile */

.node--profile {
  border-right: 1px solid @grayLight;
  font-size: 14px;
}

.node--profile .node__image {
  float: left;
  margin: 14px;
  width: 100px;
  height: 100px;
  @media (max-width: 599px) {
    float: none;
  }
}

.node--profile .node__dates-large {
  @media (max-width: 599px) {
    float: none;
    margin-top: 0;
  }
}

.node--profile .node__body {
  margin: 19px 14px 0 128px;
  @media (max-width: 599px) {
    margin: 0 14px 14px;
  }
}

.node--profile .node__name {
  position: relative;
  overflow: visible;
  padding-right: 40px;
  white-space: normal;
  font-size: 34px;
}

.node--profile .node__info {
  margin-top: 3px;
  line-height: 1.25;
}

.node--profile .node__view {
  margin: 5px 0 14px;
  @media (max-width: 599px) {
    .dropdown-menu {
      right: auto;
      left: 0;
      &:before {
        right: inherit !important;
        left: 75px !important;
      }
      &:after {
        right: inherit !important;
        left: 76px !important;
      }
    }
  }
}

.node--profile .edit-section-link {
  display: inline-block;
  vertical-align: middle;
}

/* bare */

.node--bare {
  border-color: transparent;
  background: none;
}

.no-touch a.node--bare:hover,
a.node--bare:focus {
  border: 1px solid @linkColor;
  background: @white;
}

/* direction */

.node--direction {
  text-align: center;
}

.node--direction .node__body {
  margin: 0;
}

.node--direction .node__name {
  margin: 0;
  font-size: 30px;
  line-height: 1.266666667;
}

.node--direction .icon-angle-up,
.node--direction .icon-angle-right,
.node--direction .icon-angle-down,
.node--direction .icon-angle-left,
.node--direction .icon-plus,
.node--direction .icon-spin {
  margin: 0;
  width: 1em;
  line-height: 1;
}

.node--direction .icon-plus {
  position: relative;
  top: -2px;
  font-size: 22px;
}

.node--direction .icon-spinner {
  position: static;
  font-size: 30px;
}

/* focus */

a.node--focus,
.node--focus {
  background: @gray;
}

a.node--focus .node__name,
.node--focus .node__name {
  color: @white;
}

// WTF fixes weird sticky hover bug on hard refresh in chrome/safari
.diagram a.node--focus .node__name {
  -webkit-transition: none;
}

.node--focus .node__dates {
  color: lighten(@grayLight, 15%);
}

.node--focus .node__number {
  background: @gray;
  color: @white;
}

.node--focus .node__relationship {
  color: @white;
}

.no-touch a.node--focus:hover .node__name,
a.node--focus:focus .node__name,
a.node--focus:active .node__name {
  color: lighten(@linkColor, 15%);
}

/* spouse */

.node--spouse {
  background: @grayLighter;
}

/* checked */

.node--checked .node__name {
  color: @textColor;
}

/* empty */

.node--empty {
  min-height: 40px;
  border-color: lighten(@diagramLineColor, 20%);
  background: none;
  color: @grayLight;
  filter: none;
}

/*
 * Node list
 */

.node-list {
  margin-left: 0;
  list-style: none;
}

.node-list .node {
  margin: 0;
}

/*
 * Node duplicates
 */

.no-touch .duplicate-hover {
  .transition(none);
  outline: 0;
  border-color: @linkColor;
}

.no-touch .duplicate-hover .node__name {
  .transition(none);
  border-color: @linkColor;
  color: @linkColor;
}

.duplicate-hover .node__letter {
  .transition(none);
  background: @gray !important;
}

.pedigree-wrapper {
  margin: 22px auto 20px;
}

.pedigree-chart {
  margin: 0 auto;
  max-width: 920px;
  list-style: none;
  ul{
    padding: 0;
    margin: 0;
  }
}

.pedigree-chart .branch {
  position: relative;
  
  min-height: 60px;
  height: 100%;
}

.pedigree-chart .branch .branch {
  margin: 0 0 0 210px;
  height: 50%;
}

.pedigree-chart .branch .branch .branch .branch {
  width: 240px;
}

.pedigree-chart .node {
  position: absolute;
  top: 50%;
  
  margin-top: -20px;
  width: 190px;
}

.pedigree-chart .node--direction {
  right: 0;
  width: 40px;
}

.pedigree-chart .node--direction:first-child {
  left: 0;
}

.pedigree-chart .root-relatives {
  position: absolute;
  top: 50%;
  z-index: 1;
  margin-top: 20px;
  padding-bottom: 20px;
  width: 190px;
  border: 0;
}

.pedigree-chart .root-relatives__body:first-child .root-relatives__type {
  border-top: 0;
}

.pedigree-chart .root-relatives .branch {
  margin: 0;
  min-height: 0;
  height: auto;
}

.pedigree-chart .root-relatives .branch:before {
  display: none;
}

.pedigree-chart .root-relatives .node {
  position: static;
  margin: 0;
}

.pedigree-chart .node--direction:first-child:after,
.pedigree-chart .node--pedigree:before,
.pedigree-chart .node--pedigree:after {
  position: absolute;
  top: 50%;
  margin-top: -1px;
  width: 10px;
  height: 50px;
  border-top: 2px solid @diagramLineColor;
  color: @diagramLineColor;
  content: '';
}

.pedigree-chart .node:before {
  left: -11px;
}

.pedigree-chart .node:after {
  right: -11px;
}

.pedigree-chart .node-list .branch:before {
  position: absolute;
  left: -10px;
  height: 50%;
  border-left: 2px solid @diagramLineColor;
  content: '';
}

.pedigree-chart .branch:first-child:before {
  bottom: 0;
}

.pedigree-chart > .branch > .node:before,
.pedigree-chart .branch .branch .branch .branch .node--empty:after,
.pedigree-chart .branch .branch .branch .branch .node--add:after,
.pedigree-chart .root-relatives .node:before,
.pedigree-chart .root-relatives .node:after {
  display: none;
}

.pedigree-chart .branch--empty:before,
.pedigree-chart .branch--empty .node--add:before,
.pedigree-chart .branch--empty .node--add:after,
.pedigree-chart .branch--empty .node-list .branch {
  opacity: 0.5;
}

.pedigree-chart .branch--empty:before,
.pedigree-chart .branch--empty .node-list .node:before,
.pedigree-chart .branch--empty .node:after,
.pedigree-chart .branch--empty .branch:before,
.pedigree-chart .branch--empty .branch:after {
  border-color: lighten(@diagramLineColor, 20%);
}

.pedigree-chart .tooltip {
  .transition(none);
  .transition(all (@duration / 3) @easing);
  z-index: 1;
  margin-top: 6.5px;
  padding: 5px 0 0;
  width: 190px;
  line-height: 1.181818182;
}

.pedigree-chart .tooltip.in {
  .opacity(100);
  .transition(all @duration @easing @duration);
  margin-top: 0;
}

.pedigree-chart .tooltip.top .tooltip-arrow {
  display: none;
}

.pedigree-chart .tooltip-inner {
  padding: 6.5px;
  border: 1px solid #ccc;
  border-bottom: 0;
  background: @white;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.125);
  color: @textColor;
}

.pedigree-chart .tooltip-inner div:first-child {
  margin-bottom: 6.5px;
}

.pedigree-chart .tooltip-inner div span {
  color: @grayLight;
}

/*
 * Root relatives
 */

.root-relatives__type {
  margin: 0;
  border: 1px solid @grayLight;
  border-bottom: 0;
  background: lighten(@bodyBackground, 1%);
  text-transform: uppercase;
  font-size: 11px;
  line-height: 1.181818182;
}

.root-relatives__type a {
  display: block;
  padding: 7px 4px;
  color: @grayLight;
}

.no-touch .root-relatives__type a:hover,
.root-relatives__type a:focus {
  color: @linkColor;
}

.root-relatives__type a:active {
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.125);
  color: @linkColor;
}

.root-relatives__type .icon-chevron-down,
.root-relatives__type .icon-chevron-right {
  width: 1.25em;
  text-align: center;
}

.root-relatives .node--add {
  border: 1px solid @grayLight;
}

.root-relatives .node {
  .transition(none);
  width: auto;
}

.no-touch .root-relatives a.node--bare,
.root-relatives a.node--bare {
  position: relative;
  top: -1px;
  left: -1px;
  margin: 0 -2px -2px -1px;
  padding: 1px 2px;
  z-index: 3;
}

.root-relatives .node-list {
  margin: 0;
  border: 1px solid @grayLight;
  border-bottom: 0;
  background: lighten(@bodyBackground, 1%);
}

.root-relatives__body:last-child {
  border-bottom: 1px solid @grayLight;
}

.root-relatives .node-list:hover {
  overflow: visible !important;
}

.root-relatives .node-list .node-list {
  margin: 0 0 0 30px;
  border: 0;
  background: none;
}

.root-relatives .node-list .node {
  position: relative;
  z-index: 2;
  margin: 0;
}

.root-relatives .node .node__loading {
  margin: 5px 0 0 6px;
}

.root-relatives .branch {
  position: relative;
}

.root-relatives .branch .branch .node__image {
  width: 15px;
  height: 15px;
}

.root-relatives .branch .branch .node__loading {
  width: 15px;
  height: 15px;
  font-size: 10px;
}

.root-relatives .branch .branch .node__name {
  margin: 0;
}

.root-relatives .branch .branch .node:before {
  position: absolute;
  top: 33%;
  left: -14px;
  display: block;
  margin-top: -1px;
  width: 14px;
  border-top: 2px solid @grayLight;
  color: @grayLight;
  content: '';
}

.no-touch .root-relatives .branch .branch .node:hover:before,
.root-relatives .branch .branch .node:focus:before {
  left: -14px;
  width: 10px;
}

.root-relatives .branch .branch:before {
  position: absolute;
  bottom: 66%;
  left: -15px;
  display: block;
  height: 100%;
  border-left: 2px solid @grayLight;
  content: '';
}

.root-relatives .branch:first-child:before {
  height: 50%;
}
